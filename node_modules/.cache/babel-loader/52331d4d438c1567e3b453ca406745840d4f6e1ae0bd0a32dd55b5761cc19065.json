{"ast":null,"code":"import { createStore, createEvent } from \"effector\";\nexport const store$ = createStore({\n  sprites: []\n});\nexport const addSprite = createEvent();\nstore$.on(addSprite, (prev, props) => {\n  const width = props.width / 2;\n  const height = props.height / 2;\n  return {\n    ...prev,\n    sprites: prev.sprites.concat({\n      name: props.name,\n      url: props.url,\n      width,\n      height\n    })\n  };\n});\nstore$.watch(console.log);","map":{"version":3,"names":["createStore","createEvent","store$","sprites","addSprite","on","prev","props","width","height","concat","name","url","watch","console","log"],"sources":["/Users/mark/Desktop/Projects/config_generator/src/store/store.ts"],"sourcesContent":["import { createStore, createEvent } from \"effector\";\n\ntype ISprite = {\n  name: string;\n  url: string;\n  width: number;\n  height: number;\n};\n\nexport const store$ = createStore<{ sprites: ISprite[] }>({\n  sprites: [],\n});\n\nexport const addSprite = createEvent<ISprite>();\n\nstore$.on(addSprite, (prev, props) => {\n  const width = props.width / 2;\n  const height = props.height / 2;\n\n  return {\n    ...prev,\n    sprites: prev.sprites.concat({\n      name: props.name,\n      url: props.url,\n      width,\n      height,\n    }),\n  };\n});\n\nstore$.watch(console.log);\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,UAAU;AASnD,OAAO,MAAMC,MAAM,GAAGF,WAAW,CAAyB;EACxDG,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGH,WAAW,EAAW;AAE/CC,MAAM,CAACG,EAAE,CAACD,SAAS,EAAE,CAACE,IAAI,EAAEC,KAAK,KAAK;EACpC,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,GAAG,CAAC;EAC7B,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM,GAAG,CAAC;EAE/B,OAAO;IACL,GAAGH,IAAI;IACPH,OAAO,EAAEG,IAAI,CAACH,OAAO,CAACO,MAAM,CAAC;MAC3BC,IAAI,EAAEJ,KAAK,CAACI,IAAI;MAChBC,GAAG,EAAEL,KAAK,CAACK,GAAG;MACdJ,KAAK;MACLC;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEFP,MAAM,CAACW,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}