{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/Projects/config_generator/src/components/upload-image/UploadImage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button } from \"../button\";\nimport { InputText } from \"../input-text\";\nimport styles from \"./upload-image.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UploadImage = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(function UploadImage() {\n  _s();\n  const [spriteName, setSpriteName] = React.useState(\"\");\n  const [spriteData, setSpriteData] = React.useState();\n  const inputTextRef = React.useRef(null);\n  const inputFileRef = React.useRef(null);\n  const handleChangeName = React.useCallback(e => {\n    setSpriteName(e.target.value);\n  }, []);\n  const handleUploadImage = React.useCallback(e => {\n    const files = e.target.files;\n    if (files) {\n      const sprite = files[0];\n      const url = URL.createObjectURL(sprite);\n      const image = new Image();\n      image.onload = function () {\n        const width = image.width;\n        const height = image.height;\n        setSpriteData({\n          width,\n          height,\n          url\n        });\n      };\n      image.src = url;\n    }\n  }, []);\n  const sendSpriteData = React.useCallback(() => {\n    resetInputFields();\n    // console.log(spriteName, spriteData);\n  }, [spriteName, spriteData]);\n  const resetInputFields = React.useCallback(() => {\n    console.log(inputTextRef);\n    if (inputTextRef.current) {\n      inputTextRef.current.value = \"\";\n    }\n    if (inputFileRef.current) {\n      inputFileRef.current.value = \"\";\n    }\n  }, []);\n  const resetData = React.useCallback(() => {\n    setSpriteName(\"\");\n    setSpriteData(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.uploadImage,\n    children: [/*#__PURE__*/_jsxDEV(InputText, {\n      ref: inputTextRef,\n      label: \"Enter name of sprite\",\n      onChange: handleChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputFileRef,\n      accept: \"image/png, image/gif, image/jpeg\",\n      onChange: handleUploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sendSpriteData,\n      text: \"send\",\n      disabled: !spriteName.length || !spriteData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}, \"opPjcsDP4EIPQ0wkAFWwMb42lMs=\")), \"opPjcsDP4EIPQ0wkAFWwMb42lMs=\");\n_c2 = UploadImage;\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadImage$React.memo\");\n$RefreshReg$(_c2, \"UploadImage\");","map":{"version":3,"names":["React","Button","InputText","styles","UploadImage","memo","spriteName","setSpriteName","useState","spriteData","setSpriteData","inputTextRef","useRef","inputFileRef","handleChangeName","useCallback","e","target","value","handleUploadImage","files","sprite","url","URL","createObjectURL","image","Image","onload","width","height","src","sendSpriteData","resetInputFields","console","log","current","resetData","uploadImage","length"],"sources":["/Users/mark/Desktop/Projects/config_generator/src/components/upload-image/UploadImage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"../button\";\nimport { InputText } from \"../input-text\";\nimport { addSprite } from \"../../store/store\";\nimport styles from \"./upload-image.module.scss\";\n\ntype ISpriteData = {\n  width: number;\n  height: number;\n  url: string;\n};\n\nexport const UploadImage = React.memo(function UploadImage() {\n  const [spriteName, setSpriteName] = React.useState<string>(\"\");\n  const [spriteData, setSpriteData] = React.useState<ISpriteData | null>();\n\n  const inputTextRef = React.useRef<HTMLInputElement>(null);\n  const inputFileRef = React.useRef<HTMLInputElement>(null);\n\n  const handleChangeName = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSpriteName(e.target.value);\n    },\n    []\n  );\n\n  const handleUploadImage = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const files = e.target.files;\n      if (files) {\n        const sprite = files[0];\n        const url = URL.createObjectURL(sprite);\n        const image = new Image();\n        image.onload = function () {\n          const width = image.width;\n          const height = image.height;\n          setSpriteData({\n            width,\n            height,\n            url,\n          });\n        };\n        image.src = url;\n      }\n    },\n    []\n  );\n\n  const sendSpriteData = React.useCallback(() => {\n    resetInputFields();\n    // console.log(spriteName, spriteData);\n  }, [spriteName, spriteData]);\n\n  const resetInputFields = React.useCallback(() => {\n    console.log(inputTextRef);\n    if (inputTextRef.current) {\n      inputTextRef.current.value = \"\";\n    }\n\n    if (inputFileRef.current) {\n      inputFileRef.current.value = \"\";\n    }\n  }, []);\n\n  const resetData = React.useCallback(() => {\n    setSpriteName(\"\");\n    setSpriteData(null);\n  }, []);\n\n  return (\n    <div className={styles.uploadImage}>\n      <InputText\n        ref={inputTextRef}\n        label=\"Enter name of sprite\"\n        onChange={handleChangeName}\n      />\n      <input\n        type=\"file\"\n        ref={inputFileRef}\n        accept=\"image/png, image/gif, image/jpeg\"\n        onChange={handleUploadImage}\n      />\n      <Button\n        onClick={sendSpriteData}\n        text=\"send\"\n        disabled={!spriteName.length || !spriteData}\n      />\n    </div>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}